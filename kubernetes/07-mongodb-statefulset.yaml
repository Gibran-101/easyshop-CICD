apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: easyshop
spec:
  serviceName: "mongodb-service"
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      # Add node affinity for AKS if needed
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
          name: mongodb
        
        # Environment variables for MongoDB authentication (from Azure Key Vault)
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-keyvault-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-keyvault-secret
              key: password
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            secretKeyRef:
              name: mongodb-keyvault-secret
              key: database
        
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: keyvault-secrets
          mountPath: "/mnt/secrets-store"
          readOnly: true
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Health checks
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
                # Volumes
      volumes:
      - name: keyvault-secrets
        csi:
          driver: secrets-store.csi.x-k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "easyshop-keyvault-secrets"
        
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
  
  # Volume claim templates for AKS
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      # Use Azure Disk storage class for AKS
      storageClassName: "managed-csi"  # Default AKS storage class
      resources:
        requests:
          storage: 10Gi  # Increased storage for production use