apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Namespace for all resources
namespace: easyshop

# Resources to deploy
resources:
- 00-priority-class.yaml
- 01-namespace.yaml
- 04-configmap.yaml
- 05-secrets.yaml
- 15-keyvault-secret-provider.yaml  # Azure Key Vault integration
- 06-mongodb-service.yaml
- 07-mongodb-statefulset.yaml  # Updated for AKS storage + Key Vault + authentication
- 08-easyshop-deployment.yaml  # Updated with Key Vault secrets + production settings
- 09-easyshop-service.yaml  # Updated with ClusterIP + LoadBalancer options
- 10-ingress.yaml  # Updated for AKS with buildandship.space domain
- 11-hpa.yaml
- 12-migration-job.yaml
- 13-redis-service.yaml
- 14-redis-deployment.yaml  # Updated with Key Vault secrets + authentication
- cert-manager-issuer.yaml  # Let's Encrypt issuers
- easyshop-certificate.yaml  # SSL certificates for buildandship.space

# Common labels applied to all resources
commonLabels:
  app.kubernetes.io/name: easyshop
  app.kubernetes.io/part-of: easyshop-platform
  app.kubernetes.io/managed-by: kustomize
  environment: production

# Common annotations
commonAnnotations:
  config.kubernetes.io/local-config: "true"

# Images to update (useful for CI/CD)
images:
- name: gibranf/easyshop
  newTag: latest  # This can be updated by CI/CD pipeline

# Resource transformations
patches:
# Patch to use Azure storage class for MongoDB
- patch: |-
    - op: replace
      path: /spec/volumeClaimTemplates/0/spec/storageClassName
      value: managed-csi
  target:
    kind: StatefulSet
    name: mongodb

# Replica count overrides for production
replicas:
- name: easyshop
  count: 3  # Scale up for production
- name: mongodb
  count: 1  # Keep MongoDB as single instance
- name: redis
  count: 1  # Keep Redis as single instance