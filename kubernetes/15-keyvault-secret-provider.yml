# SecretProviderClass to fetch secrets from Azure Key Vault
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: easyshop-keyvault-secrets
  namespace: easyshop
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"  # Use AKS managed identity
    userAssignedIdentityClientID: ""  # Will be auto-detected
    keyvaultName: "easyshop-kv"  # Your Key Vault name from Terraform
    tenantId: "your-tenant-id"  # Replace with your tenant ID or use workload identity
    
    # Define which secrets to fetch from Key Vault
    objects: |
      array:
        - |
          objectName: mongodb-username
          objectType: secret
          objectVersion: ""
        - |
          objectName: mongodb-password
          objectType: secret
          objectVersion: ""
        - |
          objectName: mongodb-database
          objectType: secret
          objectVersion: ""
        - |
          objectName: mongodb-connection-string
          objectType: secret
          objectVersion: ""
        - |
          objectName: redis-password
          objectType: secret
          objectVersion: ""
        - |
          objectName: redis-connection-string
          objectType: secret
          objectVersion: ""
  
  # Create Kubernetes secrets from Key Vault values
  secretObjects:
  - secretName: mongodb-keyvault-secret
    type: Opaque
    data:
    - objectName: mongodb-username
      key: username
    - objectName: mongodb-password
      key: password
    - objectName: mongodb-database
      key: database
    - objectName: mongodb-connection-string
      key: mongodb-uri
  
  - secretName: redis-keyvault-secret
    type: Opaque
    data:
    - objectName: redis-password
      key: password
    - objectName: redis-connection-string
      key: redis-uri