# SecretProviderClass to fetch secrets from Azure Key Vault using the AKS addon identity
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: easyshop-keyvault-secrets
  namespace: easyshop
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    # CRITICAL: The Azure provider expects 'userAssignedIdentityID' (clientId or resourceId)
    userAssignedIdentityID: "" # Populate with the AKS Key Vault addon identity clientId or resourceId
    keyvaultName: ""  # This will be populated by the deployment script
    tenantId: ""  # This will be populated by the deployment script
    
    # Define which secrets to fetch from Key Vault
    objects: |
      array:
        - |
          objectName: es-mongodb-username
          objectType: secret
          objectVersion: ""
        - |
          objectName: es-mongodb-password
          objectType: secret
          objectVersion: ""
        - |
          objectName: es-mongodb-database
          objectType: secret
          objectVersion: ""
        - |
          objectName: es-mongodb-uri
          objectType: secret
          objectVersion: ""
        - |
          objectName: es-redis-password
          objectType: secret
          objectVersion: ""
        - |
          objectName: es-redis-uri
          objectType: secret
          objectVersion: ""
  
  # Create Kubernetes secrets from Key Vault values
  secretObjects:
  - secretName: mongodb-keyvault-secret
    type: Opaque
    data:
    - objectName: es-mongodb-username
      key: username
    - objectName: es-mongodb-password
      key: password
    - objectName: es-mongodb-database
      key: database
    - objectName: es-mongodb-uri
      key: mongodb-uri
  
  - secretName: redis-keyvault-secret
    type: Opaque
    data:
    - objectName: es-redis-password
      key: password
    - objectName: es-redis-uri
      key: redis-uri
      