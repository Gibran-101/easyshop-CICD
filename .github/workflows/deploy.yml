name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: easyshop
  DEPLOYMENT_BLUE: easyshop-blue
  DEPLOYMENT_GREEN: easyshop-green

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Set environment variables
      run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

    - name: Build Docker image and tag with latest
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/easyshop:${{ env.SHORT_SHA }} .
        docker tag ${{ secrets.DOCKER_USERNAME }}/easyshop:${{ env.SHORT_SHA }} ${{ secrets.DOCKER_USERNAME }}/easyshop:latest

    - name: Push Docker images (with SHA and latest tags)
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/easyshop:${{ env.SHORT_SHA }}
        docker push ${{ secrets.DOCKER_USERNAME }}/easyshop:latest

    - name: Set active deployment
      id: set-active
      run: |
        CURRENT_COLOR=$(kubectl get svc easyshop -o=jsonpath='{.spec.selector.app}')
        echo "Currently live deployment: $CURRENT_COLOR"
        if [[ "$CURRENT_COLOR" == "easyshop-blue" ]]; then
          echo "COLOR=green" >> $GITHUB_ENV
        else
          echo "COLOR=blue" >> $GITHUB_ENV
        fi

    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_BLUE }} easyshop=${{ secrets.DOCKER_USERNAME }}/easyshop:${{ env.SHORT_SHA }} --record=true || true
        kubectl set image deployment/${{ env.DEPLOYMENT_GREEN }} easyshop=${{ secrets.DOCKER_USERNAME }}/easyshop:${{ env.SHORT_SHA }} --record=true || true
