name: Deploy to Kubernetes (Blue-Green)

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: your-dockerhub-username/easyshop
  K8S_NAMESPACE: default
  DEPLOYMENT_BLUE: easyshop-blue
  DEPLOYMENT_GREEN: easyshop-green
  SERVICE_NAME: easyshop-svc

jobs:
  build-and-deploy:
    name: Build, Push & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .

      - name: Push Docker Image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}

      - name: Set Current Active Deployment (Blue or Green)
        id: get-active
        run: |
          ACTIVE=$(kubectl get svc $SERVICE_NAME -n $K8S_NAMESPACE -o=jsonpath='{.spec.selector.app}')
          echo "ACTIVE=$ACTIVE" >> $GITHUB_OUTPUT

      - name: Determine Target Deployment
        id: set-target
        run: |
          if [[ "${{ steps.get-active.outputs.ACTIVE }}" == "${{ env.DEPLOYMENT_BLUE }}" ]]; then
            echo "TARGET=${{ env.DEPLOYMENT_GREEN }}" >> $GITHUB_OUTPUT
          else
            echo "TARGET=${{ env.DEPLOYMENT_BLUE }}" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Inactive Deployment
        run: |
          kubectl set image deployment/${{ steps.set-target.outputs.TARGET }} easyshop=$REGISTRY/$IMAGE_NAME:${{ github.sha }} -n $K8S_NAMESPACE
          kubectl rollout status deployment/${{ steps.set-target.outputs.TARGET }} -n $K8S_NAMESPACE

      - name: Health Check New Deployment
        run: |
          kubectl wait --for=condition=available --timeout=60s deployment/${{ steps.set-target.outputs.TARGET }} -n $K8S_NAMESPACE

      - name: Switch Service to New Deployment
        run: |
          kubectl patch svc $SERVICE_NAME -n $K8S_NAMESPACE -p \
            "{\"spec\":{\"selector\":{\"app\":\"${{ steps.set-target.outputs.TARGET }}\"}}}"

      - name: Optional: Scale Down Old Deployment
        run: |
          kubectl scale deployment/${{ steps.get-active.outputs.ACTIVE }} --replicas=0 -n $K8S_NAMESPACE
